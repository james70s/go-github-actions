name: Build & Test
# https://www.qikqiak.com/post/use-github-actions-build-go-app/
# 推送代码到 master 分支或者创建 PR 的时候将触发 Build 的 workflow
# 当创建了一个新的 tag 的时候，会触发 Release 的 workflow，该工作流会发布一个新的应用版本
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
  
    - name: Check out code
      uses: actions/checkout@v2
  
    - name: Lint Go Code
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin # temporary fix. See https://github.com/actions/setup-go/issues/14
        go get -u golang.org/x/lint/golint 
        # make lint
        golint ./...

    - name: Vet
      run: go vet ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v2

      - name: Run Unit tests.
        run: go test -cover ./...

      # - name: Upload Coverage report to CodeCov
      #   uses: codecov/codecov-action@v1.0.0
      #   with:
      #     token: 69f39cae-d23c-4ec1-ae93-c955297f84b2  #${{secrets.CODECOV_TOKEN}}
      #     file: ./coverage.txt

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check out code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .
#       run: go build -v .

